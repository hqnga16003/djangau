# Generated by Django 4.2.11 on 2024-04-01 16:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0003_buses_customer_drivers_location_staff_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_seats', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('departure_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Bus Route',
                'verbose_name_plural': 'Bus Routes',
            },
        ),
        migrations.CreateModel(
            name='BusSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_date', models.DateField()),
                ('departure_time', models.TimeField()),
                ('price_per_seat', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, 'Poor'), (2, 'Fair'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='buses',
            name='id_arrival_point',
        ),
        migrations.RemoveField(
            model_name='buses',
            name='id_departure_point',
        ),
        migrations.DeleteModel(
            name='Category',
        ),
        migrations.DeleteModel(
            name='Customer',
        ),
        migrations.RemoveField(
            model_name='feedback',
            name='trip',
        ),
        migrations.DeleteModel(
            name='Staff',
        ),
        migrations.RemoveField(
            model_name='ticket',
            name='trip',
        ),
        migrations.AlterUniqueTogether(
            name='trips',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='trips',
            name='bus',
        ),
        migrations.RemoveField(
            model_name='trips',
            name='driver',
        ),
        migrations.RemoveField(
            model_name='location',
            name='created_date',
        ),
        migrations.RemoveField(
            model_name='location',
            name='updated_date',
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('driver', 'Driver'), ('staff', 'Staff'), ('admin', 'Admin'), ('customer', 'Customer')], default='customer', max_length=20),
        ),
        migrations.DeleteModel(
            name='Buses',
        ),
        migrations.DeleteModel(
            name='Drivers',
        ),
        migrations.DeleteModel(
            name='FeedBack',
        ),
        migrations.DeleteModel(
            name='Ticket',
        ),
        migrations.DeleteModel(
            name='Trips',
        ),
        migrations.AddField(
            model_name='customerreview',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customerreview',
            name='reviewed_trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='myapp.busschedule'),
        ),
        migrations.AddField(
            model_name='busschedule',
            name='assigned_driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_schedules', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='busschedule',
            name='bus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='myapp.busroute'),
        ),
        migrations.AddField(
            model_name='busroute',
            name='arrival_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrival_buses', to='myapp.location'),
        ),
        migrations.AddField(
            model_name='busroute',
            name='departure_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departure_buses', to='myapp.location'),
        ),
        migrations.AddField(
            model_name='booking',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='scheduled_trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='myapp.busschedule'),
        ),
        migrations.AlterUniqueTogether(
            name='busschedule',
            unique_together={('bus', 'departure_date', 'departure_time')},
        ),
    ]
